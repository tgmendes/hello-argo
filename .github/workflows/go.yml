name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '**'
  issue_comment:
    types: [ created ]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'issue_comment' ||
      (github.event.comment.body == '!deploy' &&
        contains(join(github.event.issue.labels.*.name, ' '), 'env-') &&
        contains(join(github.event.issue.labels.*.name, ' '), 'svc-'))
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  push:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: |
      github.event.comment.body == '!deploy' &&
      contains(join(github.event.issue.labels.*.name, ' '), 'env-') &&
      contains(join(github.event.issue.labels.*.name, ' '), 'svc-')
    needs: [ build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Checkout Pull Request
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            PR_URL="${{ github.event.issue.pull_request.url }}"
            PR_NUM=${PR_URL##*/}
            echo "Checking out from PR #$PR_NUM based on URL: $PR_URL"
            hub pr checkout $PR_NUM

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: tgmendes/hello-argo:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: |
      github.event.comment.body == '!deploy' &&
      contains(join(github.event.issue.labels.*.name, ' '), 'env-') &&
      contains(join(github.event.issue.labels.*.name, ' '), 'svc-')
    needs: [ push ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Checkout Pull Request
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            PR_URL="${{ github.event.issue.pull_request.url }}"
            PR_NUM=${PR_URL##*/}
            echo "Checking out from PR #$PR_NUM based on URL: $PR_URL"
            hub pr checkout $PR_NUM

      - name: Get commit hash
        run: echo $(git rev-parse HEAD)

      - name: Trigger deployment
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: tgmendes/argo-config
          event-type: trigger_deployment
          client-payload: '{"labels": ${{ toJSON(github.event.issue.labels) }}, "tags": "tgmendes/hello-argo:${{ github.sha }}"}'
